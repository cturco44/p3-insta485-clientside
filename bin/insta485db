#!/bin/bash

# Stop on errors
set -Eeuo pipefail
# Prints commands
set -x

# Sanity check command line options
usage(){
    echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
    usage
    exit 1
fi

# parse argument. $1 is the first argument
case $1 in
    "create")
        # Runs the sqlite3 command line utility

        # Error: if database already exists
        if [ -d "var/uploads" ]; then
            echo "Error: database already exists"
            exit 1
        fi

        mkdir -p var/uploads
        sqlite3 var/insta485.sqlite3 < sql/schema.sql
        sqlite3 var/insta485.sqlite3 < sql/data.sql
        cp sql/uploads/* var/uploads/
        ;;

    "destroy")
        # Delete existing database
        rm -rf var/insta485.sqlite3 var/uploads
        ;;

    "reset")
        # Does 'destroy' then 'create'
        rm -rf var/insta485.sqlite3 var/uploads
        
        mkdir -p var/uploads
        sqlite3 var/insta485.sqlite3 < sql/schema.sql
        sqlite3 var/insta485.sqlite3 < sql/data.sql
        cp sql/uploads/* var/uploads/
        ;;

    "dump")
        # Prints everything in the database
        sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'
        sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'
        sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'
        sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM  posts'
        sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'
        ;;
    *)
        usage
        exit 1
        ;;
esac
        
